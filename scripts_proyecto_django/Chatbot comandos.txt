http://localhost:8000/

django-admin startproject ProyectoPythonChatbot
cd ProyectoPythonChatbot
python manage.py runserver

venv\Scripts\activate
python manage.py runserver

Si planeas subir tu proyecto a producción (Railway, Heroku, etc.), recuerda que debes recolectar los archivos estáticos antes de subirlos. Ejecuta:
python manage.py collectstatic

Realiza las migraciones / Para Modelos como Emocion, Mensaje
python manage.py makemigrations
python manage.py migrate
python manage.py showmigrations

Borrar mensajes de Usuario con Chatbot:
python manage.py shell
from chatbot.models import Mensaje
Mensaje.objects.all().delete()

Usuario:
Correo:
Contraseña:
Admin_JuanDavid
Admin_JuanDavid@gmail.com
;6L]Vmj:

Admin_DiegoJimenez
Admin_DiegoJimenez@gmail.com
6–o?4egU

User_JuanCamilo
User_JuanCamilo@gmail.com
@4&u0k.B

Listar todos los usuarios registrados en la tabla auth_user:
SELECT * FROM chatbot_customuser;
Ver todos los campos disponibles en la tabla auth_user:
DESCRIBE chatbot_customuser;
Borrar un usuario:
DELETE FROM chatbot_customuser WHERE username = 'User_JuanCamilo';
Si no funciona:
DELETE FROM chatbot_mensaje WHERE usuario_id = (SELECT id FROM chatbot_customuser WHERE username = 'User_JuanCamilo');

Prueba con el shell interactivo de Django
python manage.py shell
from chatbot.models import CustomUser
user = CustomUser.objects.create_user(username='User_JuanCamilo', email='User_JuanCamilo@gmail.com', password='@4&u0k.B')
user.save()
SELECT * FROM chatbot_customuser;

Desactivar entorno virtual:
deactivate
Eliminar entorno virtual / Cerrando Visual Studio Code:
Remove-Item -Recurse -Force .venv
Crear entorno virtual:
python -m venv venv
venv\Scripts\activate
pip install -r requirements.txt
